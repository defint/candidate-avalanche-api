definitions:
  models.Candidate:
    properties:
      id:
        type: string
      name:
        type: string
      position:
        type: string
      salary:
        type: integer
      status:
        type: string
    type: object
info:
  contact:
    email: matrenin@ukr.net
    name: Anton Matrenin
  description: Avalanche Candidates API
  license: {}
  title: Avalanche Candidates API
  version: "1.0"
paths:
  /candidate:
    get:
      consumes:
      - application/json
      description: Show a list of candidates
      operationId: candidates-list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Candidate'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Show a list of candidates
    put:
      consumes:
      - application/json
      description: Create a candidate
      operationId: candidate-create
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Candidate'
            type: object
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create a candidate
  /candidate/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a candidate
      operationId: candidate-delete
      parameters:
      - description: Candidate ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Delete a candidate
    get:
      consumes:
      - application/json
      description: Show a candidate
      operationId: candidate-item
      parameters:
      - description: Candidate ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Candidate'
            type: object
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Show a candidate
    post:
      consumes:
      - application/json
      description: Update a candidate
      operationId: candidate-update
      parameters:
      - description: Candidate ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Candidate'
            type: object
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Update a candidate
  /candidate/{id}/status:
    post:
      consumes:
      - application/json
      description: Update a status of candidate
      operationId: candidate-status-update
      parameters:
      - description: Candidate ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Candidate'
            type: object
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Update a status of candidate
swagger: "2.0"
